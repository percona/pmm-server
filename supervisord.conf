[unix_http_server]
chmod = 0700
username = dummy
password = dummy

[supervisord]
childlogdir = /var/log/supervisor
nodaemon = true
pidfile = /tmp/supervisord.pid

[supervisorctl]
username = dummy
password = dummy
user = root

[program:postgresql]
priority = 1
command =
    /usr/pgsql-10/bin/postgres
        -D /srv/postgres
stdout_logfile = /srv/logs/postgres.log
stderr_logfile = /srv/logs/postgres.log
user=postgres
stopsignal = INT
autorestart=true

[program:clickhouse]
priority = 1
command =
    /usr/bin/clickhouse-server
        --config-file=/etc/clickhouse-server/config.xml
stdout_logfile = /srv/logs/clickhouse-server.log
stderr_logfile = /srv/logs/clickhouse-server.log
autorestart = true

[program:postgresql]
priority = 1
command =
    /usr/pgsql-10/bin/postgres
        -D /srv/postgres
        -r /srv/logs/postgres.log
stdout_logfile = /srv/logs/postgres.log
stderr_logfile = /srv/logs/postgres.log
user=postgres
autorestart=true

[program:grafana]
priority = 3
user = grafana
directory = /usr/share/grafana
environment = HOME=/usr/share/grafana
command =
    /usr/sbin/grafana-server
        --homepath=/usr/share/grafana
        --config=/etc/grafana/grafana.ini
        cfg:default.paths.data=/srv/grafana
        cfg:default.paths.logs=/var/log/grafana
        cfg:default.paths.plugins=/var/lib/grafana/plugins
        cfg:default.server.root_url="%%(protocol)s://%%(domain)s:%%(http_port)s/graph"
        ENV_AUTH_BASIC
# use /var/log/grafana/grafana.log
stdout_logfile = NONE
stderr_logfile = NONE
autorestart = true

[program:nginx]
priority = 4
command = nginx
stdout_logfile = /srv/logs/nginx.log
stderr_logfile = /srv/logs/nginx.log
autorestart = true

[program:cron]
priority = 5
command = /usr/sbin/crond -n
stdout_logfile = /srv/logs/cron.log
stderr_logfile = /srv/logs/cron.log
autorestart = true

[program:qan-api2]
priority = 6
user = pmm
environment = QANAPI_BIND=127.0.0.1:9911 # GRPC_VERBOSITY=debug
# Sleep to wait for ClickhOuse to start up.
command = bash -c "sleep 5 && /usr/sbin/percona-qan-api2"
stdout_logfile = /srv/logs/qan-api2.log
stderr_logfile = /srv/logs/qan-api2.log
startretries = 60
autorestart = true
stopasgroup = true

[program:prometheus]
priority = 7
user = pmm
# --web.enable-lifecycle: pmm-managed uses /-/reload path to reload config.
command =
    /usr/sbin/prometheus
        --config.file=/etc/prometheus.yml
        --storage.tsdb.path=/srv/prometheus/data/.prom2-data
        --storage.tsdb.retention.time=ENV_METRICS_RETENTION
        --web.listen-address=:9090
        --web.console.libraries=/usr/share/prometheus/console_libraries
        --web.console.templates=/usr/share/prometheus/consoles
        --web.external-url=http://localhost:9090/prometheus/
        --web.enable-admin-api
        --web.enable-lifecycle
stdout_logfile = /srv/logs/prometheus.log
stderr_logfile = /srv/logs/prometheus.log
autorestart = true
stopwaitsecs = 300

[program:dashboard-upgrade]
priority = 10
command = /usr/share/percona-dashboards/import-dashboards.py
stdout_logfile = /srv/logs/dashboard-upgrade.log
stderr_logfile = /srv/logs/dashboard-upgrade.log
startsecs = 0
startretries = 60
autorestart = unexpected

#[program:node_exporter]
#priority = 11
#command =
#    /usr/local/percona/pmm-client/node_exporter
#        -web.listen-address=localhost:9100
#        -collectors.enabled=diskstats,filefd,filesystem,loadavg,meminfo,netdev,netstat,stat,time,uname,vmstat
#stdout_logfile = /srv/logs/node_exporter.log
#stderr_logfile = /srv/logs/node_exporter.log
#autorestart = true

#[program:clickhouse_exporter]
#priority = 12
#command =
#    /usr/local/percona/pmm-client/clickhouse_exporter
#        -telemetry.address=localhost:9116
#stdout_logfile = /srv/logs/clickhouse_exporter.log
#stderr_logfile = /srv/logs/clickhouse_exporter.log
#autorestart = true

[program:pmm-manage]
priority = 13
command =
    /usr/sbin/pmm-configurator
        -listen-address=127.0.0.1:7778
        -ssh-key-owner=pmm
        -grafana-db-path=/var/lib/grafana/grafana.db
stdout_logfile = /srv/logs/pmm-manage.log
stderr_logfile = /srv/logs/pmm-manage.log
autorestart = true

[program:pmm-managed]
priority = 14
command =
    /usr/sbin/pmm-managed
        -prometheus-config=/etc/prometheus.yml
        -prometheus-url=http://127.0.0.1:9090/prometheus
        -postgres-name=pmm-managed
        -postgres-username=pmm-managed
        -postgres-password=pmm-managed
stdout_logfile = /srv/logs/pmm-managed.log
stderr_logfile = /srv/logs/pmm-managed.log
startretries = 1000000
autorestart = true
