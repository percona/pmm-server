---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pmm
  labels:
    app.kubernetes.io/name: pmm
    app.kubernetes.io/instance: pmm
spec:
  serviceName: monitoring-service
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pmm
      app.kubernetes.io/instance: pmm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pmm
        app.kubernetes.io/instance: pmm
    spec:
      # uncomment service account when deploying pmm-rbac.yaml (should be deployed before this manifest)
      #serviceAccountName: pmm-service-account
      containers:
        - name: pmm
          image: "percona/pmm-server:2.27.0"
          imagePullPolicy: Always

          # environment passed to PMM, defined in configMap
          envFrom:
            - configMapRef:
                name: pmm
                optional: true

          # additional secrets that could be used for Grafana iDP 
          env:
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: pmm-secret
                  key: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
                  optional: true
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: pmm-secret
                  key: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
                  optional: true
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          readinessProbe:
            httpGet:
              path: /v1/readyz
              port: http
          volumeMounts:
            - name: pmm-storage
              mountPath: /srv
      initContainers: # Execute a set of changes in persistent volume and ensure they are met on each deployment.
        - name: pmm-init
          image: "percona/pmm-server:2.27.0"
          imagePullPolicy: Always
          command: ["/bin/bash"]
          args:
            - "-c"
            - |
              set -ex
              # Check if this is a first deployment on empty PV
              if [ ! -f /srv-init/pmm-distribution ]; then

                # set admin password if exists
                if [ ! -v $ADMIN_PASSWORD ]; then
                  set -e
                  #echo "changing admin password..."
                  #change-admin-password $ADMIN_PASSWORD
                  #echo "admin password was changed"
                  set -ex
                fi;

                # Copies /srv from pmm-server into the volume if the volume is empty.
                cp --archive --verbose /srv/* /srv-init

              fi;

          env:
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pmm-secret
                  key: PMM_ADMIN_PASSWORD
                  optional: true

          volumeMounts:
            - name: pmm-storage
              mountPath: /srv-init

  volumeClaimTemplates:
    - metadata:
        name: pmm-storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-service
  labels:
    app.kubernetes.io/name: pmm
    app.kubernetes.io/instance: pmm
spec:
  type: LoadBalancer
  ports:
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: pmm
    app.kubernetes.io/instance: pmm

---
apiVersion: v1
kind: Secret
metadata:
  name: pmm-secret
  labels:
    app.kubernetes.io/name: pmm
    app.kubernetes.io/instance: pmm
type: Opaque
data:
# base64 encoded password
# encode some password: `echo -n "admin" | base64`
# to get the password on deployed cluster: `kubectl get secret pmm-secret -o jsonpath='{.data.PMM_ADMIN_PASSWORD}' | base64 --decode`
  PMM_ADMIN_PASSWORD: "YWRtaW4="

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pmm
  labels:
    app.kubernetes.io/name: pmm
    app.kubernetes.io/instance: pmm
data:
# environment passed to the PMM
      DISABLE_UPDATES: "1"
