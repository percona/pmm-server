  gzip on;
  etag on;

  upstream managed-grpc {
    server 127.0.0.1:7771;
    keepalive 32;
  }
  upstream managed-json {
    server 127.0.0.1:7772;
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 75s;
  }

  upstream qan-api-grpc {
    server 127.0.0.1:9911;
    keepalive 32;
  }
  upstream qan-api-json {
    server 127.0.0.1:9922;
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 75s;
  }

  server {
    listen 80;
    listen 443 ssl http2;
    server_name _;
    server_tokens off;

    # workaround CVE-2017-7529
    max_ranges 1;
    # allow huge requests
    large_client_header_buffers 128 64k;

    ssl_certificate /srv/nginx/certificate.crt;
    ssl_certificate_key /srv/nginx/certificate.key;
    ssl_trusted_certificate /srv/nginx/ca-certs.pem;
    ssl_dhparam /srv/nginx/dhparam.pem;

    # internal location for authentication via pmm-managed/Grafana
    location /auth_request {
      internal;
      proxy_pass http://managed-json/auth_request;

      # nginx always strips body from authentication subrequests;
      # overwrite Content-Length to avoid problems on Go side and to keep connection alive
      proxy_pass_request_body off;
      proxy_set_header Content-Length 0;

      proxy_set_header X-Original-Uri $request_uri;
      proxy_set_header X-Original-Method $request_method;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # nginx completely ignores auth_request subrequest response body;
    # send the same request to /auth_request as a normal request to get it and return to the client
    error_page 401 403 /auth_request;

    # Grafana
    rewrite ^/$ $scheme://$http_host/graph/ permanent;
    rewrite ^/graph$ /graph/;
    location /graph {
      proxy_cookie_path / "/;";
      proxy_pass http://127.0.0.1:3000;
      rewrite ^/graph/(.*) /$1 break;
      proxy_read_timeout 600;
    }

    # Prometheus
    location /prometheus {
      auth_request /auth_request;
      proxy_pass http://127.0.0.1:9090;
      proxy_read_timeout 600;
    }

    # QAN App
    location /qan {
      # no auth_request
      alias /usr/share/percona-qan-app;
      try_files $uri /index.html break;
      add_header X-Frame-Options SAMEORIGIN;
    }

    # Swagger UI
    rewrite ^/swagger$ $1/swagger/ permanent;
    rewrite ^/swagger.json$ /swagger/swagger.json permanent;

    location /swagger {
      # no auth_request
      alias /usr/share/pmm-server/swagger/;
      try_files $uri /swagger-ui.html break;
    }

    # Configurator
    location /configurator {
      # TODO remove
      proxy_pass http://127.0.0.1:7778;
      proxy_read_timeout 86400;
    }

    # pmm-managed gRPC APIs
    location /agent. {
      auth_request /auth_request;
      grpc_pass grpc://managed-grpc;
      # Disable request body size check for gRPC streaming, see https://trac.nginx.org/nginx/ticket/1642.
      client_max_body_size 0;
    }
    location /inventory. {
      auth_request /auth_request;
      grpc_pass grpc://managed-grpc;
    }
    location /management. {
      auth_request /auth_request;
      grpc_pass grpc://managed-grpc;
    }
    location /server. {
      auth_request /auth_request;
      grpc_pass grpc://managed-grpc;
    }

    # pmm-managed JSON APIs
    location /v1/ {
      auth_request /auth_request;
      proxy_pass http://managed-json/v1/;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # qan-api gRPC APIs should not be exposed

    # qan-api JSON APIs
    location /v0/qan/ {
      auth_request /auth_request;
      proxy_pass http://qan-api-json/v0/qan/;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # for minimal compatibility with PMM 1.x
    rewrite ^/ping$ /v1/readyz;
    rewrite ^/managed/v1/version$ /v1/version;

    # logs.zip in both PMM 1.x and 2.x variants.
    rewrite ^/managed/logs.zip$ /logs.zip;
    location /logs.zip {
      auth_request /auth_request;
      proxy_pass http://managed-json;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }
  }
